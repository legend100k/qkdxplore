export interface ExperimentText {\n  aim: string;\n  objective: string;\n  apparatus: string;\n  theory: string;\n  procedure: string;\n  observation: string;\n  screenshot: string;\n  conclusion: string;\n}\n\nexport const parseExperimentText = (experimentId: string): ExperimentText | null => {\n  const expText = getExperimentText(experimentId);\n  if (!expText) return null;\n\n  // Split the text by sections\n  const sections = expText.split(/\\n(?=[A-Z][a-z]+:)/);\n  \n  let aim = \"\";\n  let objective = \"\";\n  let apparatus = \"\";\n  let theory = \"\";\n  let procedure = \"\";\n  let observation = \"\";\n  let screenshot = \"\";\n  let conclusion = \"\";\n\n  for (const section of sections) {\n    if (section.startsWith(\"Aim:\")) {\n      aim = section.substring(5).trim();\n    } else if (section.startsWith(\"Objective:\")) {\n      objective = section.substring(10).trim();\n    } else if (section.startsWith(\"Apparatus:\")) {\n      apparatus = section.substring(10).trim();\n    } else if (section.startsWith(\"Theory:\")) {\n      theory = section.substring(7).trim();\n    } else if (section.startsWith(\"Procedure:\")) {\n      procedure = section.substring(10).trim();\n    } else if (section.startsWith(\"Observation:\")) {\n      observation = section.substring(12).trim();\n    } else if (section.startsWith(\"Screenshot\")) {\n      screenshot = section.trim();\n    } else if (section.startsWith(\"Conclusion:\")) {\n      conclusion = section.substring(11).trim();\n    } else if (section.startsWith(\"Conclusion :\")) {\n      conclusion = section.substring(12).trim();\n    }\n  }\n\n  // If we only have one large block of theory text, we need to parse it differently\n  if (!theory && sections.length > 0) {\n    const fullText = expText;\n    \n    const aimMatch = fullText.match(/Aim:\\s*([\\s\\S]*?)(?=Objective:|$)/);\n    const objectiveMatch = fullText.match(/Objective:\\s*([\\s\\S]*?)(?=Apparatus:|$)/);\n    const apparatusMatch = fullText.match(/Apparatus:\\s*([\\s\\S]*?)(?=Theory:|$)/);\n    const theoryMatch = fullText.match(/Theory:\\s*([\\s\\S]*?)(?=Procedure:|$)/);\n    const procedureMatch = fullText.match(/Procedure:\\s*([\\s\\S]*?)(?=Observation:|$)/);\n    const observationMatch = fullText.match(/Observation:\\s*([\\s\\S]*?)(?=Screenshot|$)/);\n    const screenshotMatch = fullText.match(/(Screenshot[^:]*:[\\s\\S]*?)(?=Conclusion:|Conclusion :|$)/);\n    const conclusionMatch = fullText.match(/(Conclusion[: ]\\s*[\\s\\S]*)/);\n    \n    aim = aimMatch?.[1]?.trim() || \"\";\n    objective = objectiveMatch?.[1]?.trim() || \"\";\n    apparatus = apparatusMatch?.[1]?.trim() || \"\";\n    theory = theoryMatch?.[1]?.trim() || \"\";\n    procedure = procedureMatch?.[1]?.trim() || \"\";\n    observation = observationMatch?.[1]?.trim() || \"\";\n    screenshot = screenshotMatch?.[1]?.trim() || \"\";\n    conclusion = conclusionMatch?.[1]?.trim() || \"\";\n  }\n\n  return {\n    aim,\n    objective,\n    apparatus,\n    theory,\n    procedure,\n    observation,\n    screenshot,\n    conclusion\n  };\n};\n\nconst getExperimentText = (experimentId: string): string | null => {\n  switch (experimentId) {\n    case \"effect-of-qubits\":\n      return `Experiment 1: Effect of Qubits\\nAim: To study the fundamental role of qubits and their quantum properties in the BB84 protocol.\\nObjective: To understand how the principles of superposition, measurement disturbance, and the no-cloning theorem provide the security foundation for Quantum Key Distribution (QKD).\\nApparatus: Q-Xplore Virtual Lab (Web-based interface powered by Qiskit)\\nTheory:\\nThe BB84 protocol leverages the unique properties of quantum bits, or qubits, which is the fundamental unit of quantum information. Unlike a classical bit, which is definitively 0 or 1, a qubit can exist in a superposition of both states simultaneously, represented as |ψ⟩ = α|0⟩ + β|1⟩, where α and β are complex probability amplitudes (|α|² + |β|² = 1).\\nIn BB84, information is encoded onto qubits using two non-orthogonal bases:\\nThe Rectilinear Basis (+): |0⟩₊ = |→⟩ (Horizontal polarization), |1⟩₊ = |↑⟩ (Vertical polarization)\\nThe Diagonal Basis (×): |0⟩ₓ = |↗⟩ = (|→⟩ + |↑⟩)/√2 (45° polarization), |1⟩ₓ = |↖⟩ = (|→⟩ - |↑⟩)/√2 (135° polarization)\\nThe protocol's security is not mathematical but physical, relying on three core principles:\\nMeasurement Disturbance: Measuring a quantum system irrevocably collapses its state. If Bob measures a qubit in a basis different from the one Alice used to prepare it, the result is random (50% chance of |0⟩ or |1⟩), and the original information is lost.\\nNo-Cloning Theorem: It is impossible to create an identical copy (clone) of an arbitrary unknown quantum state. An evesdropper, Eve, cannot perfectly intercept, copy, and resend a qubit without altering the original.\\nHeisenberg Uncertainty Principle: Certain pairs of physical properties (like polarization in different bases) cannot be simultaneously known with perfect accuracy. This makes it impossible to measure a quantum state in multiple ways without introducing errors.\\nThese properties ensure that any attempt to gain information about the key introduces detectable anomalies.\\nProcedure:\\nGo to the Q-Xplore Virtual Lab simulator.\\nRun the BB84 simulation without any evesdropper and with low channel noise.\\nNote the QBER and the successful generation of a secure key.\\nTake a screenshot of the results screen showing the low QBER.\\nObservation:\\n[Your Observation Here]\\nScreenshot of Experiment 1:\\n[Paste Your Screenshot Here]\\nConclusion:\\n[Based on your observation and results, write what you learned about the effect of qubits.]`;\n\n    case \"without-eavesdropper\":\n      return `Experiment 2: BB84 Without an Evesdropper\\nAim: To establish a baseline for the BB84 protocol's performance under ideal, secure conditions.\\nObjective: To observe the key generation process and resulting QBER when the quantum channel is secure.\\nApparatus: Q-Xplore Virtual Lab\\nTheory:\\nThis experiment establishes the optimal operating conditions for the BB84 protocol. In the complete absence of an evesdropper, the only factors affecting the Quantum Bit Error Rate (QBER) are the inherent channel noise and system imperfections, as described in Experiment 2. Under well-controlled laboratory conditions with high-quality components, this intrinsic QBER can be very low, often below 2%.\\nThe process proceeds as follows:\\nQuantum Transmission: Alice sends a sequence of qubits, each randomly prepared in one of the two bases.\\nQuantum Measurement: Bob independently and randomly chooses a basis for each incoming qubit and measures it.\\nSifting: Alice and Bob publicly communicate the bases they used for each qubit (but not the bit values) over a classical channel. They discard all bits where their bases did not match. The remaining bits form the sifted key.\\nError Estimation: They compare a random subset of the sifted key to calculate the QBER. A low QBER confirms the channel is secure.\\nKey Finalization: The remaining portion of the sifted key is then processed through error correction (to fix the few remaining errors) and privacy amplification (to reduce any partial information a potential evesdropper might have) to produce a final, identical, and perfectly secret key.\\nThis scenario demonstrates the protocol's maximum efficiency and serves as a control to identify the disruptive effects of an evesdropper.\\nProcedure:\\nGo to the Q-Xplore Virtual Lab simulator.\\nSet the \"evesdropper\" parameter to OFF and \"Channel Noise\" to LOW.\\nRun the simulation and note the low QBER and efficient key generation.\\nTake a screenshot of the successful results.\\nObservation:\\n[Your Observation Here]\\nScreenshot of Experiment 3:\\n[Paste Your Screenshot Here]\\nConclusion :\\n[Based on your observation and results, write what you learned.]`;\n\n    case \"with-eavesdropper\":\n      return `Experiment 3: With an Evesdropper\\nAim: To demonstrate the detection of an evesdropper (Eve) using the BB84 protocol.\\nObjective: To observe how Eve's interception attempts disturb the quantum states and significantly increase the QBER.\\nApparatus: Q-Xplore Virtual Lab\\nTheory:\\nThis experiment demonstrates the core security feature of BB84: the detectable disruption caused by any interception attempt. The most straightforward attack is the intercept-resend attack:\\nInterception: Eve intercepts the qubit sent by Alice.\\nMeasurement: She randomly chooses a basis (rectilinear or diagonal) to measure it. She has a 50% chance of choosing the wrong basis.\\nDisturbance: If she chooses the wrong basis, the qubit's state collapses randomly. She records this random result as the bit value.\\nResending: To hide her presence, she must send a new qubit to Bob prepared in the state she measured.\\nThis action introduces errors. The probability that Eve chooses the wrong basis is 1/2. If she chooses wrong, she sends the wrong state to Bob. However, Bob also has a 50% chance of choosing the wrong basis for his measurement. The overall probability that an error is introduced for a bit that Eve tampered with is calculated as:\\nP(Eve chooses wrong basis) = 1/2\\nP(Bob gets wrong bit | Eve was wrong) = 1/2\\nTherefore, P(Error) = (1/2) * (1/2) = 1/4 or 25%\\nThus, Eve's activity raises the Quantum Bit Error Rate (QBER) to approximately 25%, which is far above the typical tolerable threshold of ~11%. This dramatic and predictable increase is an unambiguous signature of eavesdropping, forcing Alice and Bob to discard the compromised key.\\nProcedure:\\nGo to the Q-Xplore Virtual Lab simulator.\\nSet the \"evesdropper\" parameter to ON.\\nRun the simulation and observe the QBER.\\nTake a screenshot of the results showing the high (~25%) QBER.\\nObservation:\\n[Your Observation Here]\\nScreenshot of Experiment 4:\\n[Paste Your Screenshot Here]\\nConclusion :\\n[Based on your observation and results, write what you learned.]`;\n\n    case \"effect-of-channel-noise\":\n      return `Experiment 4: Effect of Channel Noise\\nAim: To investigate how noise in the quantum channel affects the security of the BB84 protocol by increasing the Quantum Bit Error Rate (QBER).\\nObjective: To isolate and observe the impact of channel noise on the QBER.\\nApparatus: Q-Xplore Virtual Lab\\n\\nTheory: Channel noise stems from physical imperfections like photon scattering, polarization drift, and detector dark counts. Unlike photon loss, noise directly causes bit errors: Bob detects a photon but records the wrong bit value. This directly increases the QBER. A high QBER can render the key insecure, even without an evesdropper, as it becomes impossible to distinguish these errors from a malicious attack.\\nProcedure:\\nSet evesdropper = OFF, Distance = SHORT (to minimize other effects).\\nSet Channel Noise = LOW. Run the simulation. Record the QBER and Final Key Length. This is your baseline.\\nSet Channel Noise = MEDIUM. Run the simulation. Record the QBER and Final Key Length.\\nSet Channel Noise = HIGH. Run the simulation. Record the QBER and Final Key Length.\\nObservation:\\n[Note: The QBER should increase significantly with higher noise levels, while the Final Key Length decreases only slightly. This proves noise creates errors.]\\n                                                       Screenshot: [Paste screenshot for High Noise setting here]\\nConclusion:\\n[Explain that channel noise directly increases the QBER, which threatens the security of the key by making it indistinguishable from an eavesdropped channel.]`;\n\n    case \"effect-of-distance\":\n      return `Experiment 5: Effect of Distance\\nAim: To analyze how increasing the transmission distance impacts the efficiency and performance of the BB84 protocol.\\nObjective: To observe the relationship between distance, photon loss (key rate), and error rate (QBER).\\nApparatus: Q-Xplore Virtual Lab\\nTheory: The primary effect of distance is exponential photon loss (attenuation), which drastically reduces the number of photons reaching Bob and thus the final key rate. Furthermore, over longer distances, effects like polarization drift have more time to occur, which can also cause errors and lead to a slight increase in the QBER alongside the major issue of loss.\\nProcedure:\\nSet evesdropper = OFF, Channel Noise = LOW.\\nSet Distance = SHORT. Run the simulation. Record the QBER and Final Key Length. This is your baseline.\\nSet Distance = MEDIUM. Run the simulation. Record the QBER and Final Key Length.\\nSet Distance = LONG. Run the simulation. Record the QBER and Final Key Length.\\nObservation:\\n[Note: The Final Key Length should drop dramatically with distance. The QBER may also see a slight increase. This shows distance causes loss and can worsen errors.]\\n                                            Screenshot: [Paste screenshot for Long Distance setting here]\\nConclusion:\\n[Explain that distance primarily causes photon loss, reducing key generation efficiency. It can also secondarily increase QBER, making it a critical practical limitation for QKD.]`;\n\n    case \"overall\":\n      return `Experiment 6: Effect of Photon Loss\\nAim: To study the specific impact of photon loss on the efficiency of the BB84 protocol and distinguish it from bit errors.\\nObjective: To demonstrate that photon loss reduces the key rate but does not directly increase the QBER.\\nTheory: It is crucial to distinguish between Photon Loss and Bit Errors.\\nPhoton Loss: A photon is sent but not detected. This reduces the raw number of bits, lowering the key rate, but it does not increase the QBER (a lost photon isn't an error; it's just missing data).\\nBit Errors: A photon is detected but its value is wrong. This increases the QBER and compromises security.\\nAn evesdropper causes errors. Channel noise causes errors. Distance causes loss (which can lead to errors indirectly). This experiment isolates the pure effect of loss.\\nProcedure:\\nSet evesdropper = OFF, Channel Noise = LOW (to ensure no errors are introduced).\\nFind a \"Photon Loss\" or \"Attenuation\" parameter. If not available, use Distance = LONG.\\nSet loss to HIGH (or use max distance). Run the simulation.\\nRecord the very short (or zero) Final Key Length and the QBER.\\nObservation:\\n[Note: You should observe a very low Key Rate or failed key generation, but the QBER should remain LOW. This proves loss affects quantity, not quality.]\\n                                              Screenshot: [Paste screenshot showing high loss but low QBER here]\\nConclusion:\\n[Explain that photon loss severely reduces the key rate and efficiency but, unlike noise or eavesdropping, does not by itself increase the QBER or compromise the security of the successfully received bits.]`;\n\n    default:\n      return null;\n  }\n};\n\n